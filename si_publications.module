<?php

/**
 * @file
 * Establishes the basic ingredients of the si_publications module
 */

/**
 * Implements hook_permission().
 */
function si_publications_permission() {
  return array(
    'Administer SI libararies publications import' => array(
      'title' => t('Administer SI libararies publications import'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function si_publications_help($path, $arg) {
  switch ($path) {
    case 'admin/content/publications/settings':
      $h = t("<p>Configure your SI Publications module settings.</p>");
      return $h;
      break;
  }
}

/**
 * Implements hook_menu().
 */
function si_publications_menu() {
  $items = array();

  $items['admin/content/publications'] = array(
    'title' => 'Publications import',
    'description' => 'Import publications from SI Libraries',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('si_publications_import_form'),
    'file' => 'includes/si_publications.forms.inc',
    'access arguments' => array('Administer SI libararies publications import'),
  );

   $items['admin/content/publications/import'] = array(
    'title' => 'Publications import',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/content/publications/settings'] = array(
    'title' => 'Publications import settings',
    'description' => 'Settings for the Zoo publications module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('si_publications_settings_form'),
    'file' => 'includes/si_publications.forms.inc',
    'access arguments' => array('Administer SI libararies publications import'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%node/all-papers'] = array(
    // 'title' => t('All papers for @scientist'),
    'title callback' => 'get_all_papers_title',
    'title arguments' => array(1),
    'description' => 'All papers description',
    'page callback' => 'si_publications_get_all_papers',
    'page arguments' => array(1),
    'file' => 'includes/si_publications.controller.inc',
    'access callback' => TRUE
  );

  return $items;
}

/**
 * Generates title for "all papers" page
 *
 */
function get_all_papers_title($node) {
  return t('All papers for @scientist' , array('@scientist' => $node->title));
  
  // Zoo specific code 
  ////add period to middle initial if any
  // $name_array = explode('-', $nid);
  // if ( count($name_array) == 3 && strlen($name_array[1]) == 1 )
  // {
  //   $name_array[1] .= '.';
  // }
  // $nid = implode(' ', $name_array);
  // $nid = ucwords($nid);
  // return t('All papers for @scientist' , array('@scientist' => $scientist));
}

/**
 * Implements hook_cron().
 *
 * hook_cron() is the traditional (pre-Drupal 7) hook for doing "background"
 * processing. It gets called every time the Drupal cron runs and must decide
 * what it will do.
 *
 */
function si_publications_cron() {
   if (variable_get('si_publications_cron_switch') == 1) {
      module_load_include('inc', 'si_publications', 'includes/si_publications.controller');
      $items = si_publications_load_scientists();

      // Put everything in a queue for processing.
      $queue = DrupalQueue::get('si_publications'); 
      foreach($items as $item) { 
        $queue->createItem($item); 
      } 
   }
 }

function si_publications_cron_queue_info() {
  $queues['si_publications'] = array(
    'worker callback' => 'si_publications_cron_worker',
    // max runtime per cron run.
    'time' => 10,
  );
  return $queues;
}

function si_publications_cron_worker($item) {
  module_load_include('inc', 'si_publications', 'includes/si_publications.controller');
  si_publications_fetch($item);
}

/**
 * Implements hook_field_prepare_view().
 * 
 * Adds a link to "all publications" below each scientists "recent papers" field.
 */
function si_publications_node_view($node) {
  // get scientist content type
  $scientist_ct = variable_get('si_publications_scientist_ct');

  // check that current node is a scientist
  if ($node->type == $scientist_ct) {
    //get profiles id field and recent papers field
    $si_profile_field = variable_get('si_publications_si_profile_field');
    $recent_papers_field = variable_get('si_publications_recent_papers_field');
  
    //we only want to add all papers link on scientists that both have a si profiles ID and some recent papers
    if (!empty($node->$si_profile_field) && !empty($node->$recent_papers_field) ) {
      $link_to_papers = '/' . current_path() . '/all-papers';
      $node->content[$recent_papers_field]['#suffix'] = '<div><a href="' . $link_to_papers . '">All Papers</a></div>';

      //Todo (maybe): if altmetric is enabled, add it.
    }
  }
}